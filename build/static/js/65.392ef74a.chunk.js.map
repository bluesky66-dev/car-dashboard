{"version":3,"sources":["@core/components/rbac-ui/utils.js","@core/components/rbac-ui/TreeBlock/TreeGenerator.js","@core/components/rbac-ui/TreeBlock/index.js","@core/components/rbac-ui/Components/AddResource.js","@core/components/rbac-ui/Components/AddRole.js","@core/components/rbac-ui/Components/RoleTag.js","@core/components/rbac-ui/Components/CheckboxTableContainer.js","@core/components/rbac-ui/CheckboxBlock/index.js","@core/components/rbac-ui/index.js","views/Roles/Roles.js"],"names":["getAllResources","data","recurse","resource","ret","hasOwnProperty","Object","keys","_resources","forEach","item","push","TreeGenerator","resources","handleOpenModal","icons","TreeParentIcon","TreeNodeIcon","TreeAddIcon","TreeEditIcon","TreeDeleteIcon","items","TreeBlockContainer","map","hasChildren","length","StyledTreeItem","nodeId","label","TreeItemContent","$hasChildren","color","style","fontSize","ItemResourceName","name","ItemResource","ActionsContainer","size","className","onClick","e","stopPropagation","handleAdd","handleEdit","handleDelete","styled","TreeItem","div","span","withTheme","props","theme","palette","text","disabled","DEFAULT_FORBIDDEN_CHARS_REGEX","TreeBlock","expandedItems","setExpandedItems","onChange","resourceForbiddenCharsRegex","Buttons","buttons","Icons","Components","components","useState","modalIsOpen","setModalIsOpen","modalDeleteIsOpen","setModalDeleteIsOpen","currentModalResourceKey","setCurrentModalResourceKey","currentModalResourceRef","setCurrentModalResourceRef","currentModalParentResourceRef","setCurrentModalParentResourceRef","modalInEditMode","setModalInEditMode","permissionNameFirstFocus","setPermissionNameFirstFocus","errorInPermission","setErrorInPermission","errorHelperText","setErrorHelperText","resourceName","setResourceName","resourceKey","setResourceKey","nameEl","useRef","permissionEl","handleCloseModal","isDeleteModal","resetErrors","resourceRef","parentResourceRef","isEditModal","TableContainer","Dialog","open","onClose","disableBackdropClick","DialogContainer","StyledDialogTitle","DialogContent","FormGroup","Label","for","Input","id","target","value","val","replace","toLowerCase","current","onBlur","type","ref","defaultValue","undefined","autoFocus","startadornment","readOnly","DialogActions","CloseButton","variant","SaveButton","permission","parent","assign","concat","display","Typography","TreeView","defaultCollapseIcon","TreeCollapseIcon","defaultExpandIcon","TreeExpandIcon","defaultExpanded","disableSelection","DeleteButton","TreeHeaderContainer","ResourceTitle","PermissionTitle","StyledTreeView","expanded","onNodeToggle","_event","ids","AddResourceBlock","AddResource","DialogTitle","AddResourceIcon","AddCircleOutlineIcon","AddRole","AddRoleIcon","RoleTag","CheckboxTableContainer","CheckboxBlock","permissionsTable","nodesWithChildren","React","currentModalRole","setCurrentModalRole","rolesOrdered","setRolesOrdered","displayedRows","setDisplayedRows","errorInRoleName","setErrorInRoleName","roleNameEl","CancelButton","EditIcon","DeleteIcon","useEffect","roles","_roles","generatedDisplayedRowsList","indexOf","isChecked","role","perm","includes","handleCheckboxChange","checked","startsWith","pos","splice","InputRowContainer","InputLabel","htmlFor","TextField","inputRef","flexGrow","helperText","error","roleName","permissions","filter","AddRoleBlock","StyledTable","StyledTHead","TableRow","row","StyledCell","RoleActions","TableCell","TableBody","StyledRow","itemChecked","itemCheckedByParent","found","every","isCheckedByParent","CheckboxWrap","StyledCheckbox","CustomInput","Table","TableHead","EMPTY_RBAC_OBJECT","StyledContainer","Rbac","setPermissionsTable","setNodesWithChildren","memoizedButtons","useMemo","cancelButton","Button","Ripple","closeButton","deleteButton","saveButton","memoizedIcons","editIcon","Edit","deleteIcon","Trash","treeAddIcon","ZoomIn","treeEditIcon","treeDeleteIcon","treeNodeIcon","FiberManualRecord","treeParentIcon","MenuIcon","treeCollapseIcon","ArrowDropDown","treeExpandIcon","ArrowRight","memoizedComponents","addResource","addRole","roleTag","checkboxTableContainer","newResources","isDelete","newPermissions","allAvailableResources","t","newData","Users","User","Admin","users","groups","documents","policies","gates","setRbacData","Card","CardHeader","CardTitle","CardBody"],"mappings":"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","file":"static/js/65.392ef74a.chunk.js","sourcesContent":["export const getAllResources = (data) => {\n  const recurse = (resource) => {\n    let ret = []\n\n    if (!resource.hasOwnProperty('_resources')) {\n      return ret\n    }\n    Object.keys(resource._resources).forEach((item) => {\n      ret.push(item)\n      ret = [...ret, ...recurse(resource._resources[item])]\n    })\n    return ret\n  }\n\n  return recurse(data)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport TreeItem from '@material-ui/lab/TreeItem'\nimport { withTheme } from '@material-ui/core'\n\nconst TreeGenerator = ({ resources, handleOpenModal, icons }) => {\n  const TreeParentIcon = icons.TreeParentIcon\n  const TreeNodeIcon = icons.TreeNodeIcon\n  const TreeAddIcon = icons.TreeAddIcon\n  const TreeEditIcon = icons.TreeEditIcon\n  const TreeDeleteIcon = icons.TreeDeleteIcon\n\n  const items = resources || {}\n\n  const handleAdd = (e, resource) => {\n    e.stopPropagation()\n    handleOpenModal(items[resource], resources, resource)\n  }\n\n  const handleEdit = (e, resource) => {\n    e.stopPropagation()\n    handleOpenModal(items[resource], resources, resource, false, true)\n  }\n\n  const handleDelete = (e, resource) => {\n    e.stopPropagation()\n    handleOpenModal(items[resource], resources, resource, true)\n  }\n\n  return (\n    <TreeBlockContainer>\n      {Object.keys(items).map((resource) => {\n        const hasChildren = Object.keys(items[resource]._resources).length > 0\n        return (\n          <StyledTreeItem\n            key={resource}\n            nodeId={resource}\n            label={\n              <TreeItemContent $hasChildren={hasChildren}>\n                {hasChildren ? (\n                  <TreeParentIcon color=\"primary\"/>\n                ) : (\n                  <TreeNodeIcon color=\"primary\" style={{ fontSize: '11px' }}/>\n                )}\n                <ItemResourceName $hasChildren={hasChildren}>{items[resource].name}</ItemResourceName>\n                <ItemResource>{resource}</ItemResource>\n                <ActionsContainer>\n                  <TreeAddIcon\n                    size={16} className='mr-50'\n                    onClick={(e) => {\n                      handleAdd(e, resource)\n                    }}\n                  />\n                  <TreeEditIcon\n                    size={14} className='mr-50'\n                    onClick={(e) => {\n                      handleEdit(e, resource)\n                    }}\n                  />\n                  <TreeDeleteIcon\n                    size={14} className='mr-50'\n                    onClick={(e) => {\n                      handleDelete(e, resource)\n                    }}\n                  />\n                </ActionsContainer>\n              </TreeItemContent>\n            }\n          >\n            {Object.keys(items[resource]._resources).length > 0 && (\n              <TreeGenerator\n                resources={items[resource]._resources}\n                handleOpenModal={handleOpenModal}\n                icons={icons}\n              />\n            )}\n          </StyledTreeItem>\n        )\n      })}\n    </TreeBlockContainer>\n  )\n}\n\nexport default TreeGenerator\n\nconst StyledTreeItem = styled(TreeItem)``\n\nconst TreeBlockContainer = styled.div`\n  & .MuiTreeItem-content,\n  & .MuiTreeItem-label {\n    position: initial;\n  }\n`\n\nexport const ActionsContainer = styled.span`\n  display: none;\n  margin-left: auto;\n  z-index: 1;\n\n  svg {\n    vertical-align: middle;\n  }\n`\n\nconst ItemResourceName = styled.span`\n  font-weight: ${({ $hasChildren }) => ($hasChildren ? 'bold' : 'normal')};\n  font-size: ${({ $hasChildren }) => ($hasChildren ? '16px' : '14px')};\n  padding-left: 5px;\n`\n\nexport const ItemResource = withTheme(styled.span`\n  position: absolute;\n  left: max(15%, 250px);\n  color: ${(props) => props.theme.palette.text.disabled};\n`)\n\nexport const TreeItemContent = withTheme(styled.div`\n  display: flex;\n  line-height: 31px;\n  border-width: 0 0 1px 0;\n  border-style: solid;\n  border-color: ${(props) => (props['$hasChildren'] ? props.theme.palette.text.disabled : 'transparent')};\n  align-items: center;\n\n  &:hover ${ActionsContainer} {\n    display: block;\n  }\n`)\n","import React, { useRef, useState } from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport { withTheme } from '@material-ui/core'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport TreeView from '@material-ui/lab/TreeView'\nimport { Input, FormGroup, Label } from 'reactstrap'\nimport styled from 'styled-components'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TreeGenerator, { ItemResource, TreeItemContent, ActionsContainer } from './TreeGenerator'\n\nconst DEFAULT_FORBIDDEN_CHARS_REGEX = /[^A-Za-z0-9]/g\n\nconst TreeBlock = ({\n  resources,\n  expandedItems,\n  setExpandedItems,\n  onChange,\n  resourceForbiddenCharsRegex,\n  buttons: Buttons,\n  icons: Icons,\n  components: Components\n}) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false)\n  const [modalDeleteIsOpen, setModalDeleteIsOpen] = useState(false)\n  const [currentModalResourceKey, setCurrentModalResourceKey] = useState('')\n  const [currentModalResourceRef, setCurrentModalResourceRef] = useState()\n  const [currentModalParentResourceRef, setCurrentModalParentResourceRef] = useState()\n  const [modalInEditMode, setModalInEditMode] = useState(false)\n  const [permissionNameFirstFocus, setPermissionNameFirstFocus] = useState(false)\n  const [errorInPermission, setErrorInPermission] = useState(false)\n  const [errorHelperText, setErrorHelperText] = useState('')\n  const [resourceName, setResourceName] = useState('')\n  const [resourceKey, setResourceKey] = useState('')\n  const nameEl = useRef(null)\n  const permissionEl = useRef(null)\n\n  const handleCloseModal = (isDeleteModal = false) => {\n    isDeleteModal ? setModalDeleteIsOpen(false) : setModalIsOpen(false)\n  }\n\n  const handleResource = () => {\n    const name = resourceName ? resourceName : (modalInEditMode ? currentModalResourceRef.name : '')\n    const permission = modalInEditMode ? currentModalResourceKey : resourceKey.toLowerCase()\n    const parent = currentModalResourceRef\n\n    if (!name) {\n      setErrorHelperText('Please enter the resource name')\n      setErrorInPermission(true)\n      return\n    }\n\n    if (!permission) {\n      setErrorHelperText('Please enter the permission name')\n      setErrorInPermission(true)\n      return\n    }\n\n    if (parent && permission in parent._resources) {\n      setErrorHelperText('Permission name already exists')\n      setErrorInPermission(true)\n      return\n    }\n\n    if (modalInEditMode && currentModalResourceRef) {\n      // @ts-ignore\n      currentModalResourceRef.name = name\n    } else {\n      if (parent) {\n        // @ts-ignore\n        parent._resources[permission] = {\n          name,\n          _resources: {}\n        }\n      }\n    }\n\n    onChange(Object.assign({}, resources))\n    setExpandedItems(expandedItems.concat([permission]))\n    handleCloseModal()\n  }\n\n  const handleDeleteResources = () => {\n    if (currentModalParentResourceRef) {\n      // @ts-ignore\n      delete currentModalParentResourceRef[currentModalResourceKey]\n    }\n\n    onChange(Object.assign({}, resources), true)\n    handleCloseModal(true)\n  }\n\n  const resetErrors = () => {\n    setErrorHelperText('')\n    setErrorInPermission(false)\n  }\n\n  const handleOpenModal = (\n    resourceRef,\n    parentResourceRef,\n    resourceKey = '',\n    isDeleteModal = false,\n    isEditModal = false\n  ) => {\n    setCurrentModalResourceRef(resourceRef)\n    setCurrentModalParentResourceRef(parentResourceRef || resources)\n    setCurrentModalResourceKey(resourceKey)\n    setPermissionNameFirstFocus(true)\n    setResourceName('')\n    setResourceKey('')\n    setModalInEditMode(isEditModal)\n    resetErrors()\n\n    if (isDeleteModal) {\n      return setModalDeleteIsOpen(true)\n    }\n\n    setModalIsOpen(true)\n  }\n\n  const handleExpand = (_event, ids) => {\n    setExpandedItems(ids)\n  }\n\n  return (\n    <TableContainer>\n      <Dialog\n        open={modalIsOpen}\n        onClose={() => {\n          handleCloseModal(false)\n        }}\n        disableBackdropClick\n      >\n        <DialogContainer>\n          <StyledDialogTitle>New Resource</StyledDialogTitle>\n          <DialogContent>\n            <FormGroup>\n              <Label for=\"name\">Resource Name:</Label>\n              <Input\n                id=\"name\"\n                onChange={(e) => {\n                  setResourceName(e.target.value)\n                  const val = e.target.value\n                    .replace(resourceForbiddenCharsRegex || DEFAULT_FORBIDDEN_CHARS_REGEX, '')\n                    .toLowerCase()\n                  if (permissionNameFirstFocus && !modalInEditMode && permissionEl.current) {\n                    setResourceKey(val)\n                  }\n                }}\n                onBlur={() => {\n                  setPermissionNameFirstFocus(false)\n                }}\n                type=\"text\"\n                ref={nameEl}\n                defaultValue={modalInEditMode ? currentModalResourceRef.name : undefined}\n                autoFocus\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"permission\">Permission name:</Label>\n              <Input\n                id=\"permission\"\n                type=\"text\"\n                ref={permissionEl}\n                startadornment={modalInEditMode ? '' : currentModalResourceKey ? `${currentModalResourceKey}.` : ''}\n                disabled={modalInEditMode}\n                readOnly={modalInEditMode}\n                onChange={(e) => {\n                  setResourceKey(e.target.value)\n                }}\n                defaultValue={modalInEditMode ? currentModalResourceKey : ''}\n              />\n              <span className=\"text-danger\">{errorInPermission && errorHelperText}</span>\n            </FormGroup>\n          </DialogContent>\n          <DialogActions>\n            <Buttons.CloseButton\n              variant=\"outlined\"\n              onClick={() => {\n                handleCloseModal(false)\n              }}\n            >\n              Close\n            </Buttons.CloseButton>\n            <Buttons.SaveButton variant=\"contained\" color=\"primary\" onClick={handleResource}>\n              Save\n            </Buttons.SaveButton>\n          </DialogActions>\n        </DialogContainer>\n      </Dialog>\n      <Dialog open={modalDeleteIsOpen} onClose={() => handleCloseModal(true)} disableBackdropClick>\n        <DialogContainer>\n          <StyledDialogTitle>Delete Resources</StyledDialogTitle>\n          <DialogContent>\n            <div style={{ display: 'flex' }}>\n              <Typography>Are you sure you want to delete the following resources:</Typography>\n            </div>\n            <TreeView\n              defaultCollapseIcon={<Icons.TreeCollapseIcon/>}\n              defaultExpandIcon={<Icons.TreeExpandIcon/>}\n              defaultExpanded={expandedItems}\n              disableSelection\n            >\n              <TreeGenerator\n                resources={\n                  {\n                    [currentModalResourceKey]: currentModalResourceRef\n                  }\n                }\n                handleOpenModal={handleOpenModal}\n                icons={Icons}\n              />\n            </TreeView>\n          </DialogContent>\n          <DialogActions>\n            <Buttons.CloseButton variant=\"outlined\" onClick={() => handleCloseModal(true)}>\n              Close\n            </Buttons.CloseButton>\n            <Buttons.DeleteButton variant=\"contained\" color=\"secondary\" onClick={handleDeleteResources}>\n              Delete\n            </Buttons.DeleteButton>\n          </DialogActions>\n        </DialogContainer>\n      </Dialog>\n      <TreeHeaderContainer>\n        <ResourceTitle>Resource</ResourceTitle>\n        <PermissionTitle>Permission</PermissionTitle>\n      </TreeHeaderContainer>\n      <StyledTreeView\n        defaultCollapseIcon={<Icons.TreeCollapseIcon/>}\n        defaultExpandIcon={<Icons.TreeExpandIcon/>}\n        expanded={expandedItems}\n        disableSelection\n        onNodeToggle={handleExpand}\n      >\n        <TreeGenerator resources={resources._resources} handleOpenModal={handleOpenModal} icons={Icons}/>\n      </StyledTreeView>\n      <AddResourceBlock\n        onClick={() => {\n          handleOpenModal(resources)\n        }}\n      >\n        <Components.AddResource/>\n      </AddResourceBlock>\n    </TableContainer>\n  )\n}\n\nexport default TreeBlock\n\nconst TreeHeaderContainer = withTheme(styled.div`\n  display: flex;\n  font-size: 1.285rem;\n  font-weight: 500;\n  height: 86px;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  border-bottom-color: ${({ theme }) => theme.palette.text.disabled};\n  margin-left: 22px;\n\n  div {\n    padding-bottom: 5px;\n    margin-top: auto;\n  }\n`)\n\nconst ResourceTitle = styled.div`\n  width: 15%;\n  min-width: 250px;\n`\n\nconst PermissionTitle = styled.div`\n  flex-grow: 1;\n  margin-left: -22px;\n`\n\nconst AddResourceBlock = styled.span`\n  cursor: pointer;\n`\n\nconst StyledTreeView = styled(TreeView)`\n  position: relative;\n  *,\n  *::before,\n  *::after {\n    transition: none !important;\n    animation: none !important;\n  }\n\n  li > ul {\n    display: none;\n  }\n\n  li.Mui-expanded > ul {\n    display: block;\n  }\n`\n\nconst DialogContainer = styled.div`\n  padding: 15px;\n  @media (min-width: 768px) {\n    min-width: 450px;\n  }\n  ${\n// @ts-ignore\n  ItemResource\n} {\n    position: initial;\n    padding-left: 10px;\n  }\n\n  ${TreeItemContent}:hover ${ActionsContainer} {\n    display: none;\n  }\n`\n\nconst StyledDialogTitle = styled(DialogTitle)`\n  .MuiTypography-h6{\n    font-family: inherit;\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\"\n\nconst AddResource = () => {\n  return (\n    <>\n      <AddResourceIcon/> Add Resource\n    </>\n  )\n}\n\nexport default AddResource\n\nconst AddResourceIcon = styled(AddCircleOutlineIcon)`\n  vertical-align: -6px;\n`\n","import React from \"react\"\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\"\nimport styled from \"styled-components\"\n\nconst AddRole = () => {\n  return (\n    <>\n      Add Role <AddRoleIcon fontSize='small'/>\n    </>\n  )\n}\n\nexport default AddRole\n\nconst AddRoleIcon = styled(AddCircleOutlineIcon)`\n  vertical-align: -4px;\n`\n","import { withTheme } from \"@material-ui/core\"\nimport styled from \"styled-components\"\n\nconst RoleTag = withTheme(styled.span`\n  font-size: 1.285rem;\n  padding: 4px;\n  white-space: nowrap;\n`)\n\nexport default RoleTag\n","import styled from \"styled-components\"\nimport TableContainer from \"@material-ui/core/TableContainer\"\n\nconst CheckboxTableContainer = styled(TableContainer)`\n`\n\nexport default CheckboxTableContainer\n","import Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableBody from '@material-ui/core/TableBody'\nimport React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport CheckboxTableContainer from '../Components/CheckboxTableContainer'\nimport { CustomInput } from 'reactstrap'\n\nconst CheckboxBlock = ({\n  permissionsTable,\n  onChange,\n  expandedItems,\n  nodesWithChildren,\n  buttons,\n  icons,\n  components\n}) => {\n  const [modalIsOpen, setModalIsOpen] = React.useState(false)\n  const [currentModalRole, setCurrentModalRole] = React.useState('')\n  const [modalDeleteIsOpen, setModalDeleteIsOpen] = React.useState(false)\n  const [modalInEditMode, setModalInEditMode] = React.useState(false)\n  const [rolesOrdered, setRolesOrdered] = React.useState([])\n  const [displayedRows, setDisplayedRows] = React.useState([])\n  const [errorInRoleName, setErrorInRoleName] = React.useState(false)\n  const [errorHelperText, setErrorHelperText] = React.useState('')\n  const roleNameEl = React.useRef(null)\n  const CancelButton = buttons.CancelButton\n  const SaveButton = buttons.SaveButton\n  const DeleteButton = buttons.DeleteButton\n  const RoleTag = components.RoleTag\n  const AddRole = components.AddRole\n  const EditIcon = icons.EditIcon\n  const DeleteIcon = icons.DeleteIcon\n\n  useEffect(() => {\n    const roles = Object.keys(permissionsTable._roles)\n    setRolesOrdered(roles)\n  }, [])\n\n  const generatedDisplayedRowsList = (data) => {\n    let ret = []\n    Object.keys(data._resources).forEach((item) => {\n      ret.push(item)\n      if (expandedItems.indexOf(item) > -1) {\n        ret = ret.concat(generatedDisplayedRowsList(data._resources[item]))\n      }\n    })\n\n    return ret\n  }\n\n  useEffect(() => {\n    setDisplayedRows(generatedDisplayedRowsList({ _resources: permissionsTable._resources }))\n  }, [permissionsTable, expandedItems])\n\n  const isChecked = (role, perm) => {\n    return permissionsTable._roles[role]['permissions'] === null || typeof permissionsTable._roles[role]['permissions'] === 'undefined' ? false : permissionsTable._roles[role]['permissions'].includes(perm)\n  }\n\n  const isCheckedByParent = (role, perm) => {\n    let found = false\n    nodesWithChildren.every((item) => {\n      if (perm.startsWith(`${item}.`) && isChecked(role, item)) {\n        found = true\n        return false\n      }\n      return true\n    })\n\n    return found\n  }\n\n  const handleCheckboxChange = (checked, role, perm) => {\n    if (checked) {\n      [...permissionsTable._roles[role]['permissions']].forEach((item) => {\n        if (!item.startsWith(`${perm}.`)) {\n          return\n        }\n        const pos = permissionsTable._roles[role]['permissions'].indexOf(item)\n        if (pos > -1) {\n          permissionsTable._roles[role]['permissions'].splice(pos, 1)\n        }\n      })\n      permissionsTable._roles[role]['permissions'].push(perm)\n    } else {\n      const pos = permissionsTable._roles[role]['permissions'].indexOf(perm)\n      permissionsTable._roles[role]['permissions'].splice(pos, 1)\n    }\n\n    onChange({ ...permissionsTable })\n  }\n\n  const resetErrors = () => {\n    setErrorHelperText('')\n    setErrorInRoleName(false)\n  }\n\n  const handleOpenModal = (role, isDeleteModal = false, isEditModal = false) => {\n    setCurrentModalRole(role)\n    setModalInEditMode(isEditModal)\n    resetErrors()\n\n    if (isDeleteModal) {\n      return setModalDeleteIsOpen(true)\n    }\n\n    setModalIsOpen(true)\n  }\n\n  const handleCloseModal = (isDeleteModal = false) => {\n    if (isDeleteModal) {\n      return setModalDeleteIsOpen(false)\n    }\n\n    setModalIsOpen(false)\n  }\n\n  const handleDeleteRole = () => {\n    delete permissionsTable._roles[currentModalRole]\n    onChange(Object.assign({}, permissionsTable))\n    setRolesOrdered(rolesOrdered.filter((item) => item !== currentModalRole))\n    handleCloseModal(true)\n  }\n\n  const handleRole = () => {\n    const roleName = roleNameEl?.current?.value || ''\n    if (roleName === currentModalRole) {\n      handleCloseModal()\n      return false\n    }\n\n    if (roleName in permissionsTable._roles) {\n      setErrorHelperText('Role name already exists')\n      setErrorInRoleName(true)\n      return false\n    }\n\n    if (modalInEditMode && currentModalRole) {\n      permissionsTable._roles[roleName] = permissionsTable._roles[currentModalRole]\n      delete permissionsTable._roles[currentModalRole]\n      rolesOrdered[rolesOrdered.indexOf(currentModalRole)] = roleName\n      setRolesOrdered([...rolesOrdered])\n    } else {\n      permissionsTable._roles[roleName] = { permissions: [] }\n      rolesOrdered.push(roleName)\n      setRolesOrdered([...rolesOrdered])\n    }\n\n    onChange(Object.assign({}, permissionsTable))\n    handleCloseModal()\n\n    return false\n  }\n\n  return (\n    <CheckboxTableContainer>\n      <Dialog\n        open={modalIsOpen}\n        onClose={() => {\n          handleCloseModal(false)\n        }}\n        disableBackdropClick\n      >\n        <DialogContainer>\n          <DialogTitle>Role</DialogTitle>\n          <DialogContent>\n            <InputRowContainer>\n              <InputLabel htmlFor=\"name\">Role Name:</InputLabel>\n              <TextField\n                id=\"name\"\n                type=\"text\"\n                inputRef={roleNameEl}\n                style={{ flexGrow: 1 }}\n                defaultValue={modalInEditMode ? currentModalRole : undefined}\n                helperText={errorHelperText}\n                error={errorInRoleName}\n                autoFocus\n              />\n            </InputRowContainer>\n          </DialogContent>\n          <DialogActions>\n            <CancelButton\n              variant=\"outlined\"\n              onClick={() => {\n                handleCloseModal(false)\n              }}\n            >\n              Cancel\n            </CancelButton>\n            <SaveButton variant=\"contained\" color=\"primary\" onClick={handleRole}>\n              Save\n            </SaveButton>\n          </DialogActions>\n        </DialogContainer>\n      </Dialog>\n      <Dialog open={modalDeleteIsOpen} onClose={() => handleCloseModal(true)} disableBackdropClick>\n        <DialogContainer>\n          <DialogTitle>Delete Resources</DialogTitle>\n          <DialogContent>\n            <Typography>\n              Are you sure you want to delete the role <b>{currentModalRole}</b>?\n            </Typography>\n            <Typography>This action cannot be undone.</Typography>\n          </DialogContent>\n          <DialogActions>\n            <CancelButton variant=\"outlined\" onClick={() => handleCloseModal(true)}>\n              Cancel\n            </CancelButton>\n            <DeleteButton variant=\"contained\" onClick={handleDeleteRole}>\n              Delete\n            </DeleteButton>\n          </DialogActions>\n        </DialogContainer>\n      </Dialog>\n      <AddRoleBlock>\n        <span\n          onClick={() => {\n            handleOpenModal('')\n          }}\n        >\n            <AddRole/>\n        </span>\n      </AddRoleBlock>\n      <StyledTable>\n        <StyledTHead>\n          <TableRow>\n            {rolesOrdered.map((row) => (\n              <StyledCell key={row}>\n                <RoleTag>{row}</RoleTag>\n                <RoleActions>\n                  <EditIcon\n                    // fontSize=\"small\"\n                    size={14} className='mr-50'\n                    onClick={() => {\n                      handleOpenModal(row, false, true)\n                    }}\n                  />\n                  <DeleteIcon\n                    // fontSize=\"small\"\n                    size={14} className='mr-50'\n                    // color=\"error\"\n                    onClick={() => {\n                      handleOpenModal(row, true)\n                    }}\n                  />\n                </RoleActions>\n              </StyledCell>\n            ))}\n            <TableCell></TableCell>\n          </TableRow>\n        </StyledTHead>\n        <TableBody>\n          {displayedRows.map((perm) => {\n            return (\n              <StyledRow key={perm}>\n                {rolesOrdered.map((role) => {\n                  const itemChecked = isChecked(role, perm)\n                  const itemCheckedByParent = isCheckedByParent(role, perm)\n                  return (\n                    <StyledCell key={`${role}-${perm}`}>\n                      <CheckboxWrap>\n                        <StyledCheckbox\n                          id={`${role}-${perm}`}\n                          type='checkbox'\n                          label=''\n                          className='custom-control-Primary'\n                          onChange={(e) => {\n                            const checked = e.target.checked\n                            handleCheckboxChange(checked, role, perm)\n                          }}\n                          checked={itemChecked || itemCheckedByParent}\n                          disabled={itemCheckedByParent}\n                        />\n                      </CheckboxWrap>\n                    </StyledCell>\n                  )\n                })}\n                <TableCell></TableCell>\n              </StyledRow>\n            )\n          })}\n        </TableBody>\n      </StyledTable>\n    </CheckboxTableContainer>\n  )\n}\n\nexport default CheckboxBlock\n\nconst CheckboxWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledCheckbox = styled(CustomInput)`\n  &.MuiCheckbox-root {\n    padding: 0;\n  }\n\n  svg {\n    font-size: 17px;\n  }\n`\n\nconst StyledTable = styled(Table)`\n  &.MuiTable-root {\n    width: auto;\n  }\n`\n\nconst StyledTHead = styled(TableHead)`\n  th {\n    height: 34px;\n  }\n  .MuiTableCell-root {\n    padding: 0 15px;\n    border-bottom: 0;\n  }\n  .MuiTableCell-head {\n    color: unset;\n  }\n`\n\nconst StyledRow = styled(TableRow)`\n  border: 1px solid transparent;\n\n  .MuiTableCell-root {\n    line-height: 21px;\n    font-size: 14px;\n    padding: 5px 15px;\n    border-bottom: 0;\n  }\n`\n\nconst StyledCell = styled(TableCell)`\n  padding: 0 15px;\n  min-width: 100px;\n  max-width: 150px;\n\n  &.MuiTableCell-root {\n    text-align: center;\n  }\n`\n\nconst RoleActions = styled.div`\n  margin-top: 4px;\n\n  & svg {\n    cursor: pointer;\n    opacity: 0.3;\n  }\n  &:hover svg {\n    opacity: 0.7;\n  }\n  &:hover svg:hover {\n    opacity: 1;\n  }\n`\n\nconst DialogContainer = styled.div`\n  padding: 15px;\n  min-width: 450px;\n`\n\nconst AddRoleBlock = styled(Typography)`\n  height: 27px;\n  padding-left: 14px;\n  padding-top: 5px;\n  position: sticky;\n  left: 0;\n\n  span {\n    cursor: pointer;\n  }\n`\n\nconst InputRowContainer = styled.div`\n  display: flex;\n\n  .MuiFormLabel-root {\n    padding-top: 8px;\n  }\n`\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'reactstrap'\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown'\nimport ArrowRight from '@material-ui/icons/ArrowRight'\nimport FiberManualRecord from '@material-ui/icons/FiberManualRecord'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { getAllResources } from './utils'\nimport TreeBlock from './TreeBlock'\nimport AddResource from './Components/AddResource'\nimport AddRole from './Components/AddRole'\nimport RoleTag from './Components/RoleTag'\nimport CheckboxTableContainer from './Components/CheckboxTableContainer'\nimport CheckboxBlock from './CheckboxBlock'\nimport { ZoomIn, Trash, Edit } from \"react-feather\"\n\nconst EMPTY_RBAC_OBJECT = { _resources: {}, _roles: {} }\n\nconst Rbac = ({\n  defaultValue = EMPTY_RBAC_OBJECT,\n  onChange,\n  resourceForbiddenCharsRegex,\n  buttons = {},\n  icons = {},\n  components = {}\n}) => {\n  const [permissionsTable, setPermissionsTable] = React.useState(defaultValue)\n  const [expandedItems, setExpandedItems] = React.useState([])\n  const [nodesWithChildren, setNodesWithChildren] = React.useState([])\n\n  useEffect(() => {\n    setExpandedItems(getAllResources(permissionsTable))\n  }, [])\n\n  const getAllNodesWithChildren = () => {\n    const recurse = (resource) => {\n      let ret = []\n      if (!resource.hasOwnProperty('_resources')) {\n        return ret\n      }\n\n      Object.keys(resource._resources).forEach((item) => {\n        if (Object.keys(resource._resources[item]._resources).length > 0) {\n          ret.push(item)\n        }\n        ret = [...ret, ...recurse(resource._resources[item])]\n      })\n\n      return ret\n    }\n\n    return recurse(permissionsTable)\n  }\n\n  useEffect(() => {\n    if (!permissionsTable) {\n      return\n    }\n    setNodesWithChildren(getAllNodesWithChildren())\n  }, [permissionsTable])\n\n  const handleCheckboxChanges = (newData) => {\n    setPermissionsTable(newData)\n    const ret = { _resources: {}, _roles: {} }\n\n    Object.keys(newData._roles).forEach((item) => {\n      ret._roles[item] = newData._roles[item]\n    })\n\n    ret._resources = newData._resources\n    onChange(ret)\n  }\n\n  const handleResourceChanges = (newResources, isDelete) => {\n    const newPermissions = Object.assign({}, permissionsTable, newResources)\n\n    if (isDelete) {\n      const allAvailableResources = getAllResources(newPermissions)\n      Object.keys(newPermissions._roles).forEach((item) => {\n        newPermissions._roles[item].permissions = newPermissions._roles[item].permissions.filter((t) => allAvailableResources.includes(t)\n        )\n      })\n    }\n\n    setPermissionsTable(newPermissions)\n    onChange(newPermissions)\n  }\n\n  const memoizedButtons = React.useMemo(() => {\n    return {\n      CancelButton: buttons.cancelButton || Button.Ripple,\n      CloseButton: buttons.closeButton || Button.Ripple,\n      DeleteButton: buttons.deleteButton || Button.Ripple,\n      SaveButton: buttons.saveButton || Button.Ripple\n    }\n  }, [buttons])\n\n  const memoizedIcons = React.useMemo(() => {\n    return {\n      EditIcon: icons.editIcon || Edit,\n      DeleteIcon: icons.deleteIcon || Trash,\n      TreeAddIcon: icons.treeAddIcon || ZoomIn,\n      TreeEditIcon: icons.treeEditIcon || Edit,\n      TreeDeleteIcon: icons.treeDeleteIcon || Trash,\n      TreeNodeIcon: icons.treeNodeIcon || FiberManualRecord,\n      TreeParentIcon: icons.treeParentIcon || MenuIcon,\n      TreeCollapseIcon: icons.treeCollapseIcon || ArrowDropDown,\n      TreeExpandIcon: icons.treeExpandIcon || ArrowRight\n    }\n  }, [icons])\n\n  const memoizedComponents = React.useMemo(() => {\n    return {\n      AddResource: components.addResource || AddResource,\n      AddRole: components.addRole || AddRole,\n      RoleTag: components.roleTag || RoleTag,\n      CheckboxTableContainer: components.checkboxTableContainer || CheckboxTableContainer\n    }\n  }, [components])\n\n  return (\n    <>\n      {permissionsTable && (\n        <StyledContainer>\n          <TreeBlock\n            resources={{\n              _resources: permissionsTable._resources\n            }}\n            expandedItems={expandedItems}\n            setExpandedItems={setExpandedItems}\n            onChange={handleResourceChanges}\n            resourceForbiddenCharsRegex={resourceForbiddenCharsRegex}\n            buttons={memoizedButtons}\n            icons={memoizedIcons}\n            components={memoizedComponents}\n          />\n          <CheckboxBlock\n            permissionsTable={permissionsTable}\n            expandedItems={expandedItems}\n            nodesWithChildren={nodesWithChildren}\n            onChange={handleCheckboxChanges}\n            buttons={memoizedButtons}\n            icons={memoizedIcons}\n            components={memoizedComponents}\n          />\n        </StyledContainer>\n      )}\n    </>\n  )\n}\n\nconst StyledContainer = styled.div`\n  width: 100%;\n  display: flex;\n  & > div {\n    width: 100%;\n    flex-grow: 1;\n  }\n`\n\nexport default Rbac\n","import { useState, useEffect } from 'react'\nimport { Card, CardHeader, CardBody, CardTitle, CardText, CardLink } from 'reactstrap'\nimport Rbac from \"@components/rbac-ui\"\n\nconst Users = () => {\n  const data = {\n    _roles: {\n      User: {\n        permissions: []\n      },\n      Admin: {\n        permissions: []\n      },\n      \"Super Admin\": {\n        permissions: []\n      }\n    },\n    _resources: {\n      users: {\n        name: \"Users\",\n        _resources: {\n          \"users.create\": {\n            name: \"create\",\n            _resources: {}\n          },\n          \"users.delete\": {\n            name: \"delete\",\n            _resources: {}\n          },\n          \"users.read\": {\n            name: \"read\",\n            _resources: {}\n          },\n          \"users.update\": {\n            name: \"update\",\n            _resources: {}\n          }\n        }\n      },\n      groups: {\n        name: \"Groups\",\n        _resources: {\n          \"groups.view\": {\n            name: \"view\",\n            _resources: {}\n          },\n          \"groups.manage\": {\n            name: \"manage\",\n            _resources: {}\n          }\n        }\n      },\n      documents: {\n        name: \"Documents\",\n        _resources: {\n          \"documents.upload\": {\n            name: \"upload\",\n            _resources: {}\n          },\n          \"documents.create\": {\n            name: \"create\",\n            _resources: {}\n          },\n          \"documents.share\": {\n            name: \"share\",\n            _resources: {}\n          },\n          \"documents.managesharing\": {\n            name: \"manage sharing\",\n            _resources: {}\n          }\n        }\n      },\n      policies: {\n        name: \"Policies\",\n        _resources: {\n          \"policies.create\": {\n            name: \"create\",\n            _resources: {}\n          },\n          \"policies.read\": {\n            name: \"read\",\n            _resources: {}\n          }\n        }\n      },\n      gates: {\n        name: \"Gates\",\n        _resources: {\n          \"gates.control\": {\n            name: \"control\",\n            _resources: {}\n          },\n          \"gates.open\": {\n            name: \"open\",\n            _resources: {}\n          }\n        }\n      }\n    }\n  }\n\n  const [rbacData, setRbacData] = useState(data)\n\n  const handleChange = (value) => {\n    setRbacData(value)\n  }\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <CardTitle>Role</CardTitle>\n        </CardHeader>\n       \n      </Card>\n      <Card>\n        <CardBody>\n          <Rbac\n            onChange={handleChange}\n            defaultValue={data }\n          />\n        </CardBody>\n      </Card>\n    </div>\n  )\n}\n\nexport default Users\n"],"sourceRoot":""}