{"version":3,"sources":["@core/components/ui-loader/index.js","utility/utils/randomString.js","@core/components/user-avatar/UserViewAvatar.js","@core/components/breadcrumbs/CarhootBreadCrumbs.js","views/UserCars/View/UserCarInfoCard.js","views/UserCars/View/index.js"],"names":["UILoader","props","children","blocking","loader","className","tag","overlayColor","Tag","classnames","style","backgroundColor","defaultProps","color","randomString","length","chars","result","i","Math","floor","random","UserAvatar","name","photo","undefined","src","alt","height","width","initials","content","contentStyles","borderRadius","fontSize","UserViewAvatar","email","CarhootBreadCrumbs","breadCrumbTitle","breadCrumbItems","map","breadCrumbItem","link","title","to","Ripple","size","UserCarInfoCard","selectedUserCar","history","useHistory","useState","disabledModal","setDisabledModal","modalTitle","setModalTitle","modalDesc","setModalDesc","action","setAction","dispatch","useDispatch","userInfo","Card","CardBody","Row","Col","xl","lg","firstName","lastName","profilePictureURL","Media","icon","body","carMake","carModel","engineCapacity","registrationNumber","yearOfManufacture","carStatus","Button","block","Link","userId","_id","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","deactivateUserCar","deleteUserCar","push","UserCarView","store","useSelector","state","userCars","useParams","id","isLoading","useEffect","getUserCar","Alert"],"mappings":"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","file":"static/js/55.79fedea7.chunk.js","sourcesContent":["// ** Third Party Components\nimport { Fragment } from 'react'\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Spinner } from 'reactstrap'\n\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n            /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","export const randomString = (length) => {\n  const chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let result = ''\n  for (let i = length; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)]\n  return result\n}\n","import PropTypes from \"prop-types\"\nimport Avatar from '@components/avatar'\nimport { CardText } from \"reactstrap\"\n\nconst UserAvatar = (props) => {\n  const { name, photo } = props\n  if (photo !== undefined && photo.length) {\n    return <img src={photo} alt='user-avatar' className='img-fluid rounded' height='104' width='104' />\n  } else {\n    const stateNum = Math.floor(Math.random() * 6),\n      states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n      color = states[stateNum]\n    return (\n      <Avatar\n        initials\n        color={color}\n        className='rounded'\n        content={name}\n        contentStyles={{\n          borderRadius: 0,\n          fontSize: 'calc(36px)',\n          width: '100%',\n          height: '100%'\n        }}\n        style={{\n          height: '90px',\n          width: '90px'\n        }}\n      />\n    )\n  }\n}\n\nconst UserViewAvatar = (props) => {\n  const { name, photo, email } = props\n  return (\n    <div className='user-avatar-section'>\n      <div className='d-flex justify-content-start'>\n        <UserAvatar\n          name={name}\n          photo={photo}\n        />\n        <div className='d-flex flex-column ml-1'>\n          <div className='user-info mb-1'>\n            {name && name.length && (<h4 className='mb-0'>{name}</h4>)}\n            {email && email.length && (<CardText tag='span'>{email}</CardText>)}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserViewAvatar\n\n// ** Default Props\nUserViewAvatar.defaultProps = {\n  name: '',\n  photo: '',\n  email: ''\n}\n\n// ** PropTypes\nUserViewAvatar.propTypes = {\n  name: PropTypes.string.isRequired,\n  photo: PropTypes.string,\n  email: PropTypes.string\n}\n\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { ArrowLeft } from 'react-feather'\nimport { Breadcrumb, BreadcrumbItem, Button } from 'reactstrap'\n\nimport { randomString } from '@utils/randomString'\n\nconst CarhootBreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbItems } = props\n\n  const renderBreadCrumbItems = () => {\n    const crumbItems =  breadCrumbItems.map((breadCrumbItem) => {\n      const { link, title } = breadCrumbItem\n      return (\n        <BreadcrumbItem key={randomString(12)} tag='li'>\n          {link && (<Link to={link}>{title}</Link>)}\n          {(!link || link === '') && title}\n        </BreadcrumbItem>\n      )\n    })\n    return crumbItems\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                {\n                  renderBreadCrumbItems()\n                }\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <Button.Ripple className='btn-icon' color='primary'>\n            <ArrowLeft size={16} />\n          </Button.Ripple>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default CarhootBreadCrumbs\n\n// ** Default Props\nCarhootBreadCrumbs.defaultProps = {\n  breadCrumbTitle: '',\n  breadCrumbItems: []\n}\n// ** PropTypes\nCarhootBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbItems: Proptypes.array.isRequired\n}\n","// ** React Imports\nimport { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport { Link, useHistory } from 'react-router-dom'\n\n// ** Custom Components\nimport UserViewAvatar from '@components/user-avatar/UserViewAvatar'\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Button, Card, CardBody, CardText, Col, Media, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap'\nimport { Check } from 'react-feather'\n\n// ** Store Actions\nimport { deactivateUserCar, deleteUserCar } from '@store/UserCars/actions'\n\nconst UserCarInfoCard = ({ selectedUserCar }) => {\n  const history = useHistory()\n  const [disabledModal, setDisabledModal] = useState(false)\n  const [modalTitle, setModalTitle] = useState('')\n  const [modalDesc, setModalDesc] = useState('')\n  const [action, setAction] = useState('')\n\n  const dispatch = useDispatch()\n\n  const handleConfirm = () => {\n    setDisabledModal(false)\n    if (action === 'deactivate') {\n      dispatch(deactivateUserCar(selectedUserCar._id))\n    } else if (action === 'delete') {\n      dispatch(deleteUserCar(selectedUserCar._id))\n      history.push(\"/userCars/list\")\n    }\n  }\n\n  const { userInfo } = selectedUserCar\n  return (\n    <>\n      <Card>\n        <CardBody>\n          <Row>\n            <Col xl='4' lg='12' className='d-flex flex-column justify-content-between border-container-lg'>\n              <UserViewAvatar\n                name={ userInfo !== undefined ? `${userInfo.firstName} ${userInfo.lastName}` : ''}\n                email={ userInfo !== undefined ? userInfo.email : ''}\n                photo={userInfo !== undefined ? userInfo.profilePictureURL : ''}\n              />\n            </Col>\n            <Col xl='3' lg='12' className='mt-2 mt-xl-0'>\n              <div className='user-info-wrapper'>\n                <Media className='mt-2'>\n                  <Avatar color='light-primary' className='rounded mr-1' icon={<Check size={18} />} />\n                  <Media body>\n                    <h6 className='mb-0'>Car Make</h6>\n                    <small>{selectedUserCar !== null ? selectedUserCar.carMake  : ''}</small>\n                  </Media>\n                </Media>\n                <Media className='mt-2'>\n                  <Avatar color='light-primary' className='rounded mr-1' icon={<Check size={18} />} />\n                  <Media body>\n                    <h6 className='mb-0'>Car Model</h6>\n                    <small>{selectedUserCar !== null ? `${selectedUserCar.carModel}`  : ''}</small>\n                  </Media>\n                </Media>\n                <Media className='mt-2'>\n                  <Avatar color='light-primary' className='rounded mr-1' icon={<Check size={18} />} />\n                  <Media body>\n                    <h6 className='mb-0'>Engine Capacity</h6>\n                    <small>{selectedUserCar !== null ? selectedUserCar.engineCapacity : ''}</small>\n                  </Media>\n                </Media>\n              </div>\n            </Col>\n            <Col xl='3' lg='12' className='mt-2 mt-xl-0'>\n              <div className='user-info-wrapper'>\n                <Media className='mt-2'>\n                  <Avatar color='light-primary' className='rounded mr-1' icon={<Check size={18} />} />\n                  <Media body>\n                    <h6 className='mb-0'>Registration Number</h6>\n                    <small>{selectedUserCar !== null ? selectedUserCar.registrationNumber : ''}</small>\n                  </Media>\n                </Media>\n                <Media className='mt-2'>\n                  <Avatar color='light-primary' className='rounded mr-1' icon={<Check size={18} />} />\n                  <Media body>\n                    <h6 className='mb-0'>Year Of Manufacture</h6>\n                    <small>{selectedUserCar !== null ? selectedUserCar.yearOfManufacture  : ''}</small>\n                  </Media>\n                </Media>\n                <Media className='mt-2'>\n                  <Avatar color='light-primary' className='rounded mr-1' icon={<Check size={18} />} />\n                  <Media body>\n                    <h6 className='mb-0'>Car Status</h6>\n                    <small>{selectedUserCar !== null ? selectedUserCar.carStatus  : ''}</small>\n                  </Media>\n                </Media>\n              </div>\n            </Col>\n            <Col xl='2' lg='12' className='mt-2 mt-xl-0'>\n              <div className='d-flex flex-wrap align-items-center my-50'>\n                <Button.Ripple\n                  block\n                  color='primary'\n                  tag={Link} to={`/users/${selectedUserCar.userId}/userCars/edit/${selectedUserCar._id}`}>\n                  Edit\n                </Button.Ripple>\n              </div>\n              <div className='d-flex flex-wrap align-items-center my-50'>\n                <Button.Ripple\n                  block\n                  outline\n                  onClick={() => {\n                    setAction('deactivate')\n                    setModalTitle('Deactivate Car')\n                    setModalDesc('Are you sure you want to deactivate the user')\n                    setDisabledModal(true)\n                  }}\n                  color='danger'>\n                  Deactivate\n                </Button.Ripple>\n              </div>\n              <div className='d-flex flex-wrap align-items-center my-50'>\n                <Button.Ripple\n                  block\n                  color='danger'\n                  onClick={() => {\n                    setAction('delete')\n                    setModalTitle('Delete Car')\n                    setModalDesc('Are you sure you want to delete the user')\n                    setDisabledModal(true)\n                  }}\n                  outline>\n                  Delete\n                </Button.Ripple>\n              </div>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n      <Modal\n        isOpen={disabledModal}\n        toggle={() => setDisabledModal(!disabledModal)}\n      >\n        <ModalHeader toggle={() => setDisabledModal(!disabledModal)}>{modalTitle}</ModalHeader>\n        <ModalBody>\n          {modalDesc}\n        </ModalBody>\n        <ModalFooter>\n          <Button color='primary' onClick={handleConfirm}>\n            Yes\n          </Button>\n          <Button color='primary' onClick={() => setDisabledModal(!disabledModal)} outline>\n            No\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  )\n}\n\nexport default UserCarInfoCard\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\n\n// ** Store & Actions\nimport { getUserCar } from '@store/UserCars/actions'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Reactstrap\nimport { Alert, Col, Row } from 'reactstrap'\n\n// // ** UserCars View Components\nimport UserCarInfoCard from './UserCarInfoCard'\n\n// ** Custom Components\nimport UILoader from '@components/ui-loader'\nimport CarhootBreadCrumbs from '@components/breadcrumbs/CarhootBreadCrumbs'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UserCarView = () => {\n  // ** Vars\n  const store = useSelector(state => state.userCars),\n    dispatch = useDispatch(),\n    { id, userId } = useParams()\n\n  const { isLoading, selectedUserCar } = store\n  // ** Get suer on mount\n  useEffect(() => {\n    dispatch(getUserCar(id))\n  }, [dispatch])\n\n\n  return store.selectedUserCar !== null && store.selectedUserCar !== undefined ? (\n    <UILoader blocking={isLoading}>\n      <CarhootBreadCrumbs\n        breadCrumbTitle='Breadcrumbs'\n        breadCrumbItems={\n          [\n            {\n              link: `/users/view/${selectedUserCar.userId}`,\n              title: 'User Car'\n            },\n            {\n              title: ' Car Detail'\n            }\n          ]\n        }\n      />\n      <div className='app-user-view'>\n        <Row>\n          <Col xl='12'>\n            <UserCarInfoCard selectedUserCar={store.selectedUserCar} />\n          </Col>\n        </Row>\n      </div>\n    </UILoader>\n  ) : (\n    <Alert color='danger'>\n      <h4 className='alert-heading'>UserCar not found</h4>\n      <div className='alert-body'>\n        UserCar with id: {id} doesn't exist. Check list of all UserCars: <Link to={`/users/view/${userId}`}>UserCars List</Link>\n      </div>\n    </Alert>\n  )\n}\n\n\nexport default UserCarView\n"],"sourceRoot":""}